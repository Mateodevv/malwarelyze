from scripts.utils.logging_config import logger
import re

from vtpython import VirusTotalClient


def _get_entity_reports(entity: str, client: VirusTotalClient, mode: str):
    reports = []
    # matches for IP addresses
    if mode == "ip":
        reports.append(client.get_ip_address_report(entity))
    # matches for URLs/Domains
    elif mode == "url":
        try:
            # searches if there is a Domain in the given URL
            match = re.search(r"(?:https?:\/\/)?([\w.-]+\.[a-zA-Z]{2,3})", entity)
            if match:
                domain = match.group(1)
                logger.info(f"Identified domain {domain} in {entity}")
                try:
                    reports.append(client.get_domain_report(domain))
                    logger.info(f"Added report for {domain}")
                except Exception as e:
                    logger.error(f"Couldn't fetch report for domain {domain}")
                    logger.exception(e)
            else:
                logger.error(f"Domain couldn't be identified for {entity}")
        except Exception as e:
            logger.exception(f"Domain check failed. {entity} seems not to be a domain. Error message: {e}")
        try:
            # gets the report for the URL
            reports.append(client.get_url_report(entity))
        except Exception as e:
            logger.exception(f"URL VirusTotal Check for {entity} failed. Error message: {e}")
    else:
        # gets the File Report
        reports.append(client.get_file_report(entity))
    return reports


def analyze_entity(entity: str, api_key: str, mode: str):
    try:
        logger.info("Initializing VirusTotal Client")
        client = VirusTotalClient(api_key)
        logger.info(f"Fetching report for {entity}")
        return _get_entity_reports(entity, client, mode)
    except Exception as e:
        logger.critical(e)
        logger.critical(f"Analysis for {entity} failed")
