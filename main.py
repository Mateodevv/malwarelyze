import os
import vt
import json

root_dir = os.getcwd()
in_dir = os.path.join(root_dir, "in")


def get_sample():
    for root, dirs, files in os.walk(in_dir):
        for file in files:
            file_path = os.path.join(root, file)
            relative_path = os.path.relpath(file_path, root_dir)
            return file, open(relative_path, "rb")


def get_VT_analysis(sample):
    client = vt.Client("")
    analysis = client.scan_file(sample, wait_for_completion=True)
    client.close()
    return analysis


def get_ioc_stats(stats):
    good = stats["harmless"] + stats["undetected"]
    bad = stats["suspicious"] + stats["malicious"]
    iocs = [good, bad]
    return iocs


def get_malware_names(analysis):
    names = []
    malware_results = analysis.results
    for engine in malware_results:
        if malware_results[engine]["category"] == "malicious" or malware_results[engine]["category"] == "suspicious":
            names.append(engine + ":" + malware_results[engine]["result"])
    print(names)
    return names


def get_analysis_attributes(analysis):
    stats = get_ioc_stats(analysis.stats)
    malware_names = get_malware_names(analysis)
    return stats, malware_names


def get_json_output(stats, names, sample_name):
    output = {
        "vt_harmless_rating": stats[0],
        "vt_malicious_rating": stats[1],
        "malware_names": names
    }
    with open(f'out/{sample_name}.json', 'w', encoding='utf-8') as f:
        json.dump(output, f, ensure_ascii=False, indent=4)


def main():
    sample_name, sample = get_sample()
    analysis_res = get_VT_analysis(sample)
    stats, names = get_analysis_attributes(analysis_res)
    get_json_output(stats, names, sample_name)


if __name__ == '__main__':
    main()
