import time
import argparse
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler
from scripts.vtanalysis import analyze_entity
from scripts.utils.logging_config import logger

API_KEY = ""
GRAYLOG_URL = ""
PATH = ""
QUEUE = []


class NewFileHandler(FileSystemEventHandler):
    def on_created(self, event):
        logger.info(f"New file detected: {event.src_path}")
        QUEUE.append(event.src_path)
        logger.info(f"Current queue of files to analyze: {QUEUE}")

    def on_modified(self, event):
        if event.src_path in QUEUE:
            return
        self.on_created(event)


def watch_dir(dir_path):
    event_handler = NewFileHandler()
    observer = Observer()
    observer.schedule(event_handler, dir_path, recursive=False)
    observer.start()

    while True:
        if QUEUE:
            entity = QUEUE.pop(0)
            try:
                analyze_entity(entity=entity, api_key=API_KEY, graylog_url=GRAYLOG_URL)
            except Exception as e:
                logger.error(f"failed to analyze entity {entity}")
                logger.exception(e)
            time.sleep(60)
        else:
            time.sleep(1)


INFO_MSG = '''\

             @      @
     / \     { _____}      / \
   /  |  \___/*******\___/  |  \
  (   I  /   ~   '   ~   \  I   )
   \  |  |   0       0   |  |  /
     \   |       A       |   /
       \__    _______    __/
          \_____________/
    _-------*         *-------_
   /  /---    Hacking     ---\  \
 /  /     (   System   )      \  \
{  (     (    Gremlin!   )     )  }
 \  \    |               |    /  /
   \  \  |               |  /  /
    **** |               | ****
   //|\\  \_____________/  //|\\
   *         '*** ***'         *
  ***.       .*** ***.       .***
  '*************' '*************'

usage: myscript.py [--info] \033[91mdir_path\033[0m \033[91mapi_key\033[0m \033[91mgraylog_url\033[0m

Watch a directory for new files and analyze them with VirusTotal.

\033[93mpositional arguments:\033[0m
  \033[91mdir_path\033[0m     Path to directory to monitor
  \033[91mapi_key\033[0m      VirusTotal API key
  \033[91mgraylog_url\033[0m  Graylog server URL

optional arguments:
  \033[94m-i, --info\033[0m   show this help message and exit"
'''


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("-i", "--info", help="Display information about the program", action="store_true")
    args = parser.parse_args()
    if args.info:
        print(INFO_MSG)
        exit()

    parser.add_argument("dir_path", help="Path to directory to monitor")
    parser.add_argument("api_key", help="VirusTotal API key")
    parser.add_argument("graylog_url", help="Graylog server URL")
    args = parser.parse_args()

    global PATH, API_KEY, GRAYLOG_URL
    PATH = args.dir_path
    API_KEY = args.api_key
    GRAYLOG_URL = args.graylog_url
    watch_dir(PATH)


if __name__ == "__main__":
    main()
