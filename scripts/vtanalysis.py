from scripts.utils.logging_config import logger
import re

import requests
from vtpython import VirusTotalClient


def _get_entity_reports(entity: str, client: VirusTotalClient):
    reports = []
    # matches for IP addresses
    if re.match(r"\b(?:\d{1,3}\.){3}\d{1,3}\b", entity):
        reports.append(client.get_ip_address_report(entity))
    # matches for URLs/Domains
    elif re.match(r"http|https", entity):
        try:
            # searches if there is a Domain in the given URL
            match = re.search(r"(?:https?:\/\/)?([\w.-]+\.[a-zA-Z]{2,3})", entity)
            if match:
                domain = match.group(1)
                reports.append(client.get_domain_report(domain))
        except Exception as e:
            logger.error(f"Domain check failed. {entity} seems not to be a domain. Error message: {e}")
        try:
            # gets the report for the URL
            reports.append(client.get_url_report(entity))
        except Exception as e:
            logger.error(f"URL VirusTotal Check for {entity} failed. Error message: {e}")
    else:
        # gets the File Report
        reports.append(client.get_file_report(entity))
    return reports


def _send_reports_to_graylog(reports: list[dict], graylog_url: str):
    headers = {'content-type': 'application/json'}
    graylog_url = f"http://{graylog_url}:12202/gelf"
    for report in reports:
        # Send the report to Graylog server
        report["event_name"] = "vt-analysis"
        requests.post(graylog_url, json=report, headers=headers)


def analyze_entity(entity: str, api_key: str, graylog_url: str):
    client = VirusTotalClient(api_key)
    # Get the reports for the given entity
    reports = _get_entity_reports(entity, client)
    # Send the reports to Graylog server
    _send_reports_to_graylog(reports, graylog_url)
